// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebAPICore.Data.Context;

#nullable disable

namespace WebAPICore.Data.Migrations
{
    [DbContext(typeof(WebAPICoreContext))]
    partial class WebAPICoreContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebAPICore.Data.Models.CurrentWeather", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<float>("MaxTemp")
                        .HasColumnType("real");

                    b.Property<string>("MinTemp")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Temp")
                        .HasColumnType("real");

                    b.HasKey("ID");

                    b.ToTable("Weathers");
                });

            modelBuilder.Entity("WebAPICore.Data.Models.Customer", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            BirthDate = new DateTime(2024, 6, 29, 11, 0, 20, 612, DateTimeKind.Local).AddTicks(433),
                            Email = "nick@email.com",
                            Name = "Nick"
                        },
                        new
                        {
                            ID = 2,
                            BirthDate = new DateTime(2024, 6, 29, 11, 0, 20, 612, DateTimeKind.Local).AddTicks(525),
                            Email = "bob@email.com",
                            Name = "Bob"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
